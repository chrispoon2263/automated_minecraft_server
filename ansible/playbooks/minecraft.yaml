---
- name: Install Docker & Run Container # name of our playbook
  hosts: servers                       # specify the group of hosts we want to target
  gather_facts: false                  # do not gather data, in case python is not installed, it would fail otherwise
  become: true                         # elevate permission

  tasks:                     
    - name: Install python
      ansible.builtin.raw: dnf install -y python3 python3-pip

    - name: Install AWS CLI using pip3
      pip:
        name: awscli
        executable: pip3
    
    - name: Install docker
      dnf:
        name: docker
        state: latest

    - name: Enable and start Docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Pull Minecraft Docker image
      community.docker.docker_image:
        name: chrispoon2263/minecraft-server
        source: pull

    - name: Create Minecraft data directory on host via s3 backend
      file:
        path: /home/ec2-user/minecraft-data
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Sync Minecraft server files from S3
      ansible.builtin.command: >
        aws s3 sync s3://chris-terraform-minecraft-bucket/server_files /home/ec2-user/minecraft-data

    - name: Run Minecraft Docker container
      community.docker.docker_container:
        name: minecraft-server
        image: chrispoon2263/minecraft-server
        state: started
        restart_policy: always
        ports:
          - "25565:25565"
        volumes:
          - /home/ec2-user/minecraft-data:/home/ubuntu/minecraft